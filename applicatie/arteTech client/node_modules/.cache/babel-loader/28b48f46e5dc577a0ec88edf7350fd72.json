{"ast":null,"code":"import _slicedToArray from \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/views/Period.jsx\";\nimport React, { useState, useEffect, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink, PDFViewer, ReactPDF } from '@react-pdf/renderer';\nimport Mypdf from './Pdf';\nexport default function Period({\n  match\n}) {\n  const token = localStorage.getItem('token');\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        periodstart = _useState2[0],\n        setperiodstart = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        periodend = _useState4[0],\n        setperiodend = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        settitle = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        taskdata = _useState8[0],\n        settaskdata = _useState8[1];\n\n  let url = \"http://localhost:8888/web/jsonapi/node/Periode?filter[janis-filter][condition][value]=\".concat(match.params.id, \"&filter[janis-filter][condition][path]=id\");\n\n  function getPeriodData() {\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      let dates = data.data[0];\n      settitle(dates.attributes.title);\n      setperiodstart(dates.attributes.field_eind_periode);\n      setperiodend(dates.attributes.field_start_periode);\n    });\n  }\n\n  function getTasksData() {\n    fetch(\"http://localhost:8888/web/jsonapi/node/taak?filter[datum][condition][path]=field_datum&filter[datum][condition][operator]=BETWEEN&filter[datum][condition][value][]=\".concat(periodstart, \"&filter[datum][condition][value][]=\").concat(periodend), {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      for (let i = 0; i < data.data.length; i++) {\n        console.log(data.data[i]); // document.getElementById('tasks').innerHTML += `<div><h3>${data.data[i].attributes.title}</h3></div>`\n      }\n    });\n  }\n\n  useEffect(getPeriodData, []);\n  getTasksData();\n\n  const App = () => React.createElement(PDFViewer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Mypdf, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }));\n\n  ReactPDF.render(React.createElement(MyDocument, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \"\".concat(__dirname, \"/example.pdf\"));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/views/Period.jsx"],"names":["React","useState","useEffect","Component","ReactDOM","BrowserRouter","Router","Switch","Route","Link","Page","Text","View","Document","StyleSheet","PDFDownloadLink","PDFViewer","ReactPDF","Mypdf","Period","match","token","localStorage","getItem","periodstart","setperiodstart","periodend","setperiodend","title","settitle","taskdata","settaskdata","url","params","id","getPeriodData","fetch","method","headers","then","response","json","data","dates","attributes","field_eind_periode","field_start_periode","getTasksData","i","length","console","log","App","render","__dirname"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\n\nimport ReactDOM from 'react-dom';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Page, Text, View, Document, StyleSheet, PDFDownloadLink, PDFViewer,ReactPDF } from '@react-pdf/renderer';\nimport Mypdf from './Pdf'\n\nexport default function Period ({match}) {\n\n    const token = localStorage.getItem('token')\n    const [periodstart, setperiodstart] = useState(\"\")\n    const [periodend, setperiodend] = useState(\"\")\n    const [title, settitle] = useState(\"\")\n    const [taskdata, settaskdata] = useState(\"\")\n\n\n\n    let url = `http://localhost:8888/web/jsonapi/node/Periode?filter[janis-filter][condition][value]=${match.params.id}&filter[janis-filter][condition][path]=id`\n\n    function getPeriodData(){\n\n    \n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/vnd.api+json',\n                'Accept': 'application/x-www-form-urlencoded',\n                'Authorization': 'Bearer ' +  token\n            },\n        }).then((response)=> {\n            return response.json()\n        }).then((data)=> {\n            let dates = data.data[0]\n            settitle(dates.attributes.title)\n            setperiodstart(dates.attributes.field_eind_periode);\n            setperiodend(dates.attributes.field_start_periode);\n\n            \n        })\n    }\n\n\n    function getTasksData(){\n    fetch(`http://localhost:8888/web/jsonapi/node/taak?filter[datum][condition][path]=field_datum&filter[datum][condition][operator]=BETWEEN&filter[datum][condition][value][]=${periodstart}&filter[datum][condition][value][]=${periodend}`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/vnd.api+json',\n                'Accept': 'application/x-www-form-urlencoded',\n                'Authorization': 'Bearer ' +  token\n            },\n        }).then((response)=> {\n            return response.json()\n        }).then((data)=> {\n            for(let i = 0; i<data.data.length; i++){\n                console.log(data.data[i])\n                // document.getElementById('tasks').innerHTML += `<div><h3>${data.data[i].attributes.title}</h3></div>`\n            }\n        })\n    }\n\n    useEffect(getPeriodData,[])\n    getTasksData();\n\n\n\n    const App = () => (\n        <PDFViewer>\n          <Mypdf />\n        </PDFViewer>\n      );\n      \n      ReactPDF.render(<MyDocument />, `${__dirname}/example.pdf`);\n    \n       return (\n          <div >\n           \n          </div>\n        );\n      \n    \n    \n    \n}"]},"metadata":{},"sourceType":"module"}