{"ast":null,"code":"var _jsxFileName = \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/components/downloadBtn.jsx\";\nimport React from 'react';\nimport { Document, Page, Text, StyleSheet, View } from '@react-pdf/renderer';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport App from './../App';\n\nclass DownloadButton extends React.Component {\n  render() {\n    const GeneratePdf = () => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(PDFDownloadLink, {\n      document: React.createElement(App, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }),\n      fileName: \"somename.pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => loading ? 'Loading document...' : 'Download now!'));\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(GeneratePdf, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DownloadButton;","map":{"version":3,"sources":["/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/components/downloadBtn.jsx"],"names":["React","Document","Page","Text","StyleSheet","View","PDFDownloadLink","App","DownloadButton","Component","render","GeneratePdf","blob","url","loading","error"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,IAAlB,EAAuBC,IAAvB,EAA6BC,UAA7B,EAAyCC,IAAzC,QAAoD,qBAApD;AACA,SAAQC,eAAR,QAA8B,qBAA9B;AACA,OAAOC,GAAP,MAAgB,UAAhB;;AAGA,MAAMC,cAAN,SAA6BR,KAAK,CAACS,SAAnC,CAA6C;AAE7CC,EAAAA,MAAM,GAAE;AACR,UAAMC,WAAW,GAAG,MACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B;AAAoC,MAAA,QAAQ,EAAC,cAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,KAAD,KAAoCD,OAAO,GAAG,qBAAH,GAA2B,eADvE,CADA,CADA;;AAOA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADA,CADA;AAOC;;AAjB4C;;AAmB7C,eAAeN,cAAf","sourcesContent":["\nimport React from 'react';\nimport {Document, Page,Text, StyleSheet, View} from '@react-pdf/renderer';\nimport {PDFDownloadLink} from '@react-pdf/renderer';\nimport App from './../App';\n\n\nclass DownloadButton extends React.Component {\n\nrender(){\nconst GeneratePdf = () => (\n<div>\n<PDFDownloadLink document={<App />} fileName=\"somename.pdf\">\n{({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n</PDFDownloadLink>\n</div>\n)\nreturn(\n<div>\n<h4>\n{<GeneratePdf />}\n</h4>\n</div>\n);\n}\n}\nexport default DownloadButton"]},"metadata":{},"sourceType":"module"}