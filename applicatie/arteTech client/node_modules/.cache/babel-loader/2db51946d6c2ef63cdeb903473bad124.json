{"ast":null,"code":"import _slicedToArray from \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/views/Period.jsx\";\nimport React, { useState, useEffect, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport * as jsPDF from 'jspdf';\nimport './../css/general.css';\nimport './../css/button.css';\nimport './../css/period.css';\nexport default function Period({\n  match\n}) {\n  const token = localStorage.getItem('token');\n  const userId = localStorage.getItem('userId');\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        periodstart = _useState2[0],\n        setperiodstart = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        periodend = _useState4[0],\n        setperiodend = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        settitle = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        taskdata = _useState8[0],\n        settaskdata = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        message = _useState10[0],\n        setmessage = _useState10[1];\n\n  let url = \"http://localhost:8888/web/jsonapi/node/Periode?filter[janis-filter][condition][value]=\".concat(match.params.id, \"&filter[janis-filter][condition][path]=id\");\n\n  function getPeriodData() {\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      let dates = data.data[0];\n      settitle(dates.attributes.title);\n      setperiodstart(dates.attributes.field_eind_periode);\n      setperiodend(dates.attributes.field_start_periode);\n    });\n  }\n\n  function getTasksData() {\n    fetch(\"http://localhost:8888/web/jsonapi/node/taak?filter[datum][condition][path]=field_datum&filter[datum][condition][operator]=BETWEEN&filter[datum][condition][value][]=\".concat(periodstart, \"&filter[datum][condition][value][]=\").concat(periodend, \"&fields[node--taak]=title,field_startuur,field_einduur,field_pauze,field_datum&filter[klant][condition][path]=field_test.id&filter[klant][condition][value]=\").concat(userId), {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      document.getElementById('tasks').innerHTML = \"\";\n\n      for (let i = 0; i < data.data.length; i++) {\n        console.log(data.data[i]);\n        document.getElementById('tasks').innerHTML += \"<div><h1>\".concat(data.data[i].attributes.title, \"</h1><p>\").concat(data.data[i].attributes.field_datum, \"</p><p>\").concat(data.data[i].attributes.field_uitgevoerde_activiteiten, \"</p></div>\");\n      }\n    });\n  }\n\n  useEffect(getPeriodData, []);\n  getTasksData();\n\n  function handleSubmit() {\n    fetch('http://localhost:8888/web/jsonapi/node/fout', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token,\n        'X-CSRF-Token': 'KTpytkazFcgdgLqK33HpYx4YFb3w3a5olURFx2uAEXs'\n      },\n      body: JSON.stringify({\n        \"data\": {\n          \"type\": \"node--taak\",\n          \"attributes\": {\n            \"title\": \"foutmelding\",\n            \"field_aanvraag\": message\n          }\n        }\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  function goedkeuring() {\n    fetch('http://localhost:8888/web/jsonapi/node/Periode/' + match.params.id, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token,\n        'X-CSRF-Token': 'KTpytkazFcgdgLqK33HpYx4YFb3w3a5olURFx2uAEXs'\n      },\n      body: JSON.stringify({\n        \"data\": {\n          \"type\": \"node--periode\",\n          \"id\": match.params.id,\n          \"attributes\": {\n            \"field_goed_geke\": true\n          }\n        }\n      })\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  function downloadPDF() {\n    var doc = new jsPDF({});\n    doc.text('Hello world!', 10, 10);\n    doc.text('Hello ...!', 10, 20);\n    doc.save(\"periode-\".concat(title, \".pdf\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"taskbody\",\n    id: \"tasks\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"goedGekeurd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"commentblock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"input commentblock\",\n    name: \"message\",\n    type: \"text\",\n    onChange: e => setmessage(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btnColor\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, \"Verzend probleem\"), React.createElement(\"button\", {\n    className: \"btnColor\",\n    onClick: goedkeuring,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Goedgekeurd\"))));\n}","map":{"version":3,"sources":["/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/views/Period.jsx"],"names":["React","useState","useEffect","Component","ReactDOM","BrowserRouter","Router","Switch","Route","Link","jsPDF","Period","match","token","localStorage","getItem","userId","periodstart","setperiodstart","periodend","setperiodend","title","settitle","taskdata","settaskdata","message","setmessage","url","params","id","getPeriodData","fetch","method","headers","then","response","json","data","dates","attributes","field_eind_periode","field_start_periode","getTasksData","document","getElementById","innerHTML","i","length","console","log","field_datum","field_uitgevoerde_activiteiten","handleSubmit","body","JSON","stringify","goedkeuring","downloadPDF","doc","text","save","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\n\nimport ReactDOM from 'react-dom';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport * as jsPDF from 'jspdf'\n\nimport './../css/general.css'\nimport './../css/button.css'\nimport './../css/period.css'\n\nexport default function Period ({match}) {\n\n    const token = localStorage.getItem('token')\n    const userId = localStorage.getItem('userId')\n    const [periodstart, setperiodstart] = useState(\"\")\n    const [periodend, setperiodend] = useState(\"\")\n    const [title, settitle] = useState(\"\")\n    const [taskdata, settaskdata] = useState(\"\")\n    const [message, setmessage] = useState(\"\")\n\n\n\n    let url = `http://localhost:8888/web/jsonapi/node/Periode?filter[janis-filter][condition][value]=${match.params.id}&filter[janis-filter][condition][path]=id`\n\n    function getPeriodData(){\n\n    \n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/vnd.api+json',\n                'Accept': 'application/x-www-form-urlencoded',\n                'Authorization': 'Bearer ' +  token\n            },\n        }).then((response)=> {\n            return response.json()\n        }).then((data)=> {\n            let dates = data.data[0]\n            settitle(dates.attributes.title)\n            setperiodstart(dates.attributes.field_eind_periode);\n            setperiodend(dates.attributes.field_start_periode);\n\n            \n        })\n    }\n\n\n    function getTasksData(){\n    fetch(`http://localhost:8888/web/jsonapi/node/taak?filter[datum][condition][path]=field_datum&filter[datum][condition][operator]=BETWEEN&filter[datum][condition][value][]=${periodstart}&filter[datum][condition][value][]=${periodend}&fields[node--taak]=title,field_startuur,field_einduur,field_pauze,field_datum&filter[klant][condition][path]=field_test.id&filter[klant][condition][value]=${userId}`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/vnd.api+json',\n                'Accept': 'application/x-www-form-urlencoded',\n                'Authorization': 'Bearer ' +  token\n            },\n        }).then((response)=> {\n            return response.json()\n        }).then((data)=> {\n            document.getElementById('tasks').innerHTML = \"\";\n            for(let i = 0; i<data.data.length; i++){\n                console.log(data.data[i])\n                document.getElementById('tasks').innerHTML += `<div><h1>${data.data[i].attributes.title}</h1><p>${data.data[i].attributes.field_datum}</p><p>${data.data[i].attributes.field_uitgevoerde_activiteiten}</p></div>`\n            }\n        })\n    }\n\n    useEffect(getPeriodData,[])\n    getTasksData();\n\n    function handleSubmit(){\n\n    \n    fetch('http://localhost:8888/web/jsonapi/node/fout', {\n    method: \"POST\",\n    headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' +  token,\n        'X-CSRF-Token': 'KTpytkazFcgdgLqK33HpYx4YFb3w3a5olURFx2uAEXs'\n      },\n      body: JSON.stringify({\n              \"data\": {\n                \"type\": \"node--taak\",\n                \"attributes\": {\n                  \"title\": \"foutmelding\",\n                  \"field_aanvraag\": message,\n                },\n              }\n            })\n  }).then((response) => {\n    return response.json();\n  }).then((data)=> {\n    console.log(data)\n  })\n}\n\nfunction goedkeuring(){\n    fetch('http://localhost:8888/web/jsonapi/node/Periode/'+match.params.id, {\n        method: \"PATCH\",\n        headers: {\n            'Content-Type': 'application/vnd.api+json',\n            'Accept': 'application/x-www-form-urlencoded',\n            'Authorization': 'Bearer ' +  token,\n            'X-CSRF-Token': 'KTpytkazFcgdgLqK33HpYx4YFb3w3a5olURFx2uAEXs'\n          },\n          body: JSON.stringify({\n                \"data\": \n                   {\n                       \"type\": \"node--periode\",\n                       \"id\": match.params.id,\n                       \"attributes\": {\n                           \"field_goed_geke\": true\n                       }\n                   }\n                })\n      }).then((response) => {\n        return response.json();\n      }).then((data)=> {\n        console.log(data)\n      })\n}\n \n\n    function downloadPDF(){\n        var doc = new jsPDF({\n          })\n          \n          doc.text('Hello world!', 10, 10)\n          doc.text('Hello ...!', 10, 20)\n\n          doc.save(`periode-${title}.pdf`)\n    }\n    \n    \n       return (\n           <div>\n           \n          <div className=\"taskbody\"id=\"tasks\" >\n          </div>    \n          <div className=\"goedGekeurd\">\n            <div className=\"commentblock\">\n            <input\n                className=\"input commentblock\"\n                name=\"message\"\n                type=\"text\"\n                onChange={(e) => setmessage(e.target.value)}\n            />\n            <button className=\"btnColor\"onClick={handleSubmit}>Verzend probleem</button>\n\n            <button className=\"btnColor\" onClick={goedkeuring}>Goedgekeurd</button>\n\n            </div>\n\n               </div>\n          </div>\n        );\n}\n\n"]},"metadata":{},"sourceType":"module"}