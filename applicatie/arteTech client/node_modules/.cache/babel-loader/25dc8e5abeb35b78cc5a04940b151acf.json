{"ast":null,"code":"import _slicedToArray from \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/views/Period.jsx\";\nimport React, { useState, useEffect, Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport * as jsPDF from 'jspdf';\nimport './../css/general.css';\nimport './../css/period.css';\nimport './../css/button.css';\nexport default function Period({\n  match\n}) {\n  const token = localStorage.getItem('token');\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        periodstart = _useState2[0],\n        setperiodstart = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        periodend = _useState4[0],\n        setperiodend = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        title = _useState6[0],\n        settitle = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        taskdata = _useState8[0],\n        settaskdata = _useState8[1];\n\n  let url = \"http://localhost:8888/web/jsonapi/node/Periode?filter[janis-filter][condition][value]=\".concat(match.params.id, \"&filter[janis-filter][condition][path]=id\");\n\n  function getPeriodData() {\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      let dates = data.data[0];\n      settitle(dates.attributes.title);\n      setperiodstart(dates.attributes.field_eind_periode);\n      setperiodend(dates.attributes.field_start_periode);\n    });\n  }\n\n  function getTasksData() {\n    fetch(\"http://localhost:8888/web/jsonapi/node/taak?filter[datum][condition][path]=field_datum&filter[datum][condition][operator]=BETWEEN&filter[datum][condition][value][]=\".concat(periodstart, \"&filter[datum][condition][value][]=\").concat(periodend), {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/vnd.api+json',\n        'Accept': 'application/x-www-form-urlencoded',\n        'Authorization': 'Bearer ' + token\n      }\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      for (let i = 0; i < data.data.length; i++) {\n        console.log(data.data[i]);\n        document.getElementById('tasks').innerHTML += \"<div><h1>\".concat(data.data[i].attributes.title, \"</h1><p>\").concat(data.data[i].attributes.field_datum, \"</p><p>\").concat(data.data[i].attributes.field_uitgevoerde_activiteiten, \"</p></div>\");\n      }\n    });\n  }\n\n  useEffect(getPeriodData, []);\n  getTasksData();\n\n  function downloadPDF() {\n    var doc = new jsPDF({});\n    doc.text('Hello world!', 10, 10);\n    doc.text('Hello ...!', 10, 20);\n    doc.save(\"periode-\".concat(title, \".pdf\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"goedGekeurd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"taskbody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"tasks\",\n    className: \"periodes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/annadelanghe/Documents/school/CMSDev/Eindwerk1920/applicatie/arteTech client/src/views/Period.jsx"],"names":["React","useState","useEffect","Component","ReactDOM","BrowserRouter","Router","Switch","Route","Link","jsPDF","Period","match","token","localStorage","getItem","periodstart","setperiodstart","periodend","setperiodend","title","settitle","taskdata","settaskdata","url","params","id","getPeriodData","fetch","method","headers","then","response","json","data","dates","attributes","field_eind_periode","field_start_periode","getTasksData","i","length","console","log","document","getElementById","innerHTML","field_datum","field_uitgevoerde_activiteiten","downloadPDF","doc","text","save"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component } from 'react';\n\nimport ReactDOM from 'react-dom';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport * as jsPDF from 'jspdf'\n\nimport './../css/general.css'\nimport './../css/period.css'\nimport './../css/button.css'\n\nexport default function Period ({match}) {\n\n    const token = localStorage.getItem('token')\n    const [periodstart, setperiodstart] = useState(\"\")\n    const [periodend, setperiodend] = useState(\"\")\n    const [title, settitle] = useState(\"\")\n    const [taskdata, settaskdata] = useState(\"\")\n\n\n\n    let url = `http://localhost:8888/web/jsonapi/node/Periode?filter[janis-filter][condition][value]=${match.params.id}&filter[janis-filter][condition][path]=id`\n\n    function getPeriodData(){\n\n    \n        fetch(url, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/vnd.api+json',\n                'Accept': 'application/x-www-form-urlencoded',\n                'Authorization': 'Bearer ' +  token\n            },\n        }).then((response)=> {\n            return response.json()\n        }).then((data)=> {\n            let dates = data.data[0]\n            settitle(dates.attributes.title)\n            setperiodstart(dates.attributes.field_eind_periode);\n            setperiodend(dates.attributes.field_start_periode);\n\n            \n        })\n    }\n\n\n    function getTasksData(){\n    fetch(`http://localhost:8888/web/jsonapi/node/taak?filter[datum][condition][path]=field_datum&filter[datum][condition][operator]=BETWEEN&filter[datum][condition][value][]=${periodstart}&filter[datum][condition][value][]=${periodend}`, {\n            method: \"GET\",\n            headers: {\n                'Content-Type': 'application/vnd.api+json',\n                'Accept': 'application/x-www-form-urlencoded',\n                'Authorization': 'Bearer ' +  token\n            },\n        }).then((response)=> {\n            return response.json()\n        }).then((data)=> {\n            for(let i = 0; i<data.data.length; i++){\n                console.log(data.data[i])\n                document.getElementById('tasks').innerHTML += `<div><h1>${data.data[i].attributes.title}</h1><p>${data.data[i].attributes.field_datum}</p><p>${data.data[i].attributes.field_uitgevoerde_activiteiten}</p></div>`\n            }\n        })\n    }\n\n    useEffect(getPeriodData,[])\n    getTasksData();\n\n    function downloadPDF(){\n        var doc = new jsPDF({\n          })\n          \n          doc.text('Hello world!', 10, 10)\n          doc.text('Hello ...!', 10, 20)\n\n          doc.save(`periode-${title}.pdf`)\n    }\n    \n    \n       return (\n           <div>\n               <div className=\"goedGekeurd\">\n\n               </div>\n           <div className=\"taskbody\">\n          <div id=\"tasks\" className=\"periodes\">\n          </div>\n          </div>\n          </div>\n        );\n}\n\n"]},"metadata":{},"sourceType":"module"}